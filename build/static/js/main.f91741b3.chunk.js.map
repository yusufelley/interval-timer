{"version":3,"sources":["components/Timer/Timer.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Timer","useState","second","setSecond","minute","setMinute","isActive","setIsActive","counter","setCounter","set1","numSets","active","set2","set3","on1","duration","on2","on3","off1","off2","off3","quickButtons","defaultTimerInstructions","timeOn","timeOff","currentTimer","timerStarted","resume","timerInstructions","setTimerInstructions","useEffect","intervalId","console","log","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","clearInterval","className","onClick","JSON","stringify","onSubmit","event","preventDefault","target","value","type","name","id","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f91741b3.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Timer.css\";\n\nexport const Timer = () => {\n  const [second, setSecond] = useState(\"00\");\n  const [minute, setMinute] = useState(\"00\");\n  const [isActive, setIsActive] = useState(false);\n  const [counter, setCounter] = useState(0);\n\n  const [quickButtons, setQuickButtons] = useState({\n    set1: {\n      numSets: \"2\",\n      active: \"false\",\n    },\n    set2: {\n      numSets: \"3\",\n      active: \"false\",\n    },\n    set3: {\n      numSets: \"5\",\n      active: \"false\",\n    },\n    on1: {\n      duration: \"5\",\n      active: \"false\",\n    },\n    on2: {\n      duration: \"30\",\n      active: \"false\",\n    },\n    on3: {\n      duration: \"60\",\n      active: \"false\",\n    },\n    off1: {\n      duration: \"3\",\n      active: \"false\",\n    },\n    off2: {\n      duration: \"30\",\n      active: \"false\",\n    },\n    off3: {\n      duration: \"60\",\n      active: \"false\",\n    },\n  });\n\n  const defaultTimerInstructions = {\n    numSets: \"0\",\n    timeOn: \"0\",\n    timeOff: \"0\",\n    currentTimer: \"TIME_ON\",\n    timerStarted: \"false\",\n    resume: \"0\",\n  };\n\n  const [timerInstructions, setTimerInstructions] = useState(\n    defaultTimerInstructions\n  );\n\n  const handleStart = () => {\n    if (timerInstructions.timerStarted) {\n      setTimerInstructions({ ...timerInstructions });\n    } else {\n      setCounter(timerInstructions.timeOn);\n      setIsActive(!isActive);\n    }\n  };\n\n  useEffect(() => {\n    let intervalId;\n\n    if (counter < 0 && timerInstructions.currentTimer === \"TIME_ON\") {\n      setTimerInstructions({ ...timerInstructions, currentTimer: \"TIME_OFF\" });\n      setCounter(timerInstructions.timeOff);\n    }\n\n    if (counter < 0 && timerInstructions.currentTimer === \"TIME_OFF\") {\n      setTimerInstructions({\n        ...timerInstructions,\n        numSets: timerInstructions.numSets - 1,\n        currentTimer: \"TIME_ON\",\n      });\n      setCounter(timerInstructions.timeOn);\n    }\n\n    if (timerInstructions.numSets <= 0) {\n      setIsActive(false);\n      console.log(\"CHECK IS ACTIVE: \" + isActive);\n    }\n\n    if (isActive && counter >= 0) {\n      console.log(\"IS ACTIVE AND COUNTER >= 0: \" + counter);\n      intervalId = setInterval(() => {\n        const secondCounter = counter % 60;\n        const minuteCounter = Math.floor(counter / 60);\n\n        const computedSecond =\n          String(secondCounter).length === 1\n            ? `0${secondCounter}`\n            : secondCounter;\n        const computedMinute =\n          String(minuteCounter).length === 1\n            ? `0${minuteCounter}`\n            : minuteCounter;\n\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n\n        setCounter((counter) => counter - 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, counter]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(event.target.value);\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      {/* TIMER TEXT */}\n      <div className=\"timer-display\">\n        <div className=\"timer text\">\n          <span className=\"minute\">{minute}</span>\n          <span>:</span>\n          <span className=\"second\">{second}</span>\n        </div>\n        <div className=\"text\">SETS</div>\n      </div>\n\n      <div className=\"quick-timer-wrapper\">\n        {/* SET BUTTONS */}\n        <div className=\"quick-timer-btn\">\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                numSets: quickButtons.set1.numSets,\n              });\n            }}\n          >\n            {quickButtons.set1.numSets}\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                numSets: quickButtons.set2.numSets,\n              });\n            }}\n          >\n            {quickButtons.set2.numSets}\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                numSets: quickButtons.set3.numSets,\n              });\n            }}\n          >\n            {quickButtons.set3.numSets}\n          </button>\n        </div>\n\n        {/* TIME ON BUTTONS */}\n        <div className=\"quick-timer-btn\">\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                timeOn: quickButtons.on1.duration,\n              });\n            }}\n          >\n            {quickButtons.on1.duration}\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                timeOn: quickButtons.on2.duration,\n              });\n            }}\n          >\n            {quickButtons.on2.duration}\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                timeOn: quickButtons.on3.duration,\n              });\n            }}\n          >\n            {quickButtons.on3.duration}\n          </button>\n        </div>\n\n        {/* TIME OFF BUTTONS */}\n        <div className=\"quick-timer-btn\">\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                timeOff: quickButtons.off1.duration,\n              });\n            }}\n          >\n            {quickButtons.off1.duration}\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                timeOff: quickButtons.off2.duration,\n              });\n            }}\n          >\n            {quickButtons.off2.duration}\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTimerInstructions({\n                ...timerInstructions,\n                timeOff: quickButtons.off3.duration,\n              });\n            }}\n          >\n            {quickButtons.off3.duration}\n          </button>\n        </div>\n      </div>\n\n      {/* START STOP BUTTONS */}\n      <div className=\"start-stop-wrapper\">\n        <button\n          className={isActive ? \"btn pause\" : \"btn start\"}\n          onClick={() => {\n            handleStart();\n          }}\n        >\n          {isActive ? \"Pause\" : \"Start\"}\n        </button>\n        <button\n          className={isActive ? \"btn disbaled\" : \"btn reset\"}\n          onClick={() => {\n            if (!isActive) {\n              setIsActive(false);\n              setSecond(\"00\");\n              setMinute(\"00\");\n              setTimerInstructions(defaultTimerInstructions);\n            }\n          }}\n        >\n          RESET\n        </button>\n      </div>\n\n      {/* DEBUG TIMER INSTRUCTIONS */}\n      <div className=\"text\">{JSON.stringify(timerInstructions)}</div>\n\n      {/* SETTINGS */}\n      <div>\n        <div className=\"text\">SETTINGS</div>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <select type=\"dropdown\" name=\"set-sets\" id=\"set-sets\">\n              <option value=\"set1\">set1</option>\n              <option value=\"set2\">set2</option>\n              <option value=\"set3\">set3</option>\n            </select>\n            <input type=\"text\" placeholder=\"sets\" id=\"set-sets\" />\n          </div>\n\n          <div>\n            <select name=\"\" id=\"\">\n              <option value=\"on1\">on1</option>\n              <option value=\"on2\">on2</option>\n              <option value=\"on3\">on3</option>\n            </select>\n            <input type=\"text\" placeholder=\"on\" />\n          </div>\n\n          <div>\n            <select name=\"\" id=\"\">\n              <option value=\"off1\">off1</option>\n              <option value=\"off2\">off2</option>\n              <option value=\"off3\">off3</option>\n            </select>\n            <input type=\"text\" placeholder=\"off\" />\n          </div>\n\n          <button className=\"btn\" type=\"submit\">\n            SUBMIT CHANGES\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Timer } from \"./Timer/Timer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}